{% extends "commerce/_layouts/cp" %}

{% set crumbs = [
    { label: 'Commerce'|t('commerce'), url: url('commerce') },
    { label: 'Settings'|t('app'), url: url('commerce/settings') },
    { label: "PDFs"|t('commerce'), url: url('commerce/settings/pdfs') },
] %}

{% set selectedSubnavItem = 'settings' %}

{% set fullPageForm = not readOnly %}

{% if readOnly %}
    {% set contentNotice = readOnlyNotice() %}
{% endif %}

{% import "_includes/forms" as forms %}

{% block content %}
    {% if not readOnly %}
    {{ actionInput('commerce/pdfs/save') }}
    {{ redirectInput('commerce/settings/pdfs') }}
    {% endif %}

    {{ hiddenInput('storeId', pdf.storeId) }}

    {% if pdf.id %}
      {{ hiddenInput('id', pdf.id) }}
    {% endif %}

    {{ forms.textField({
        first: true,
        label: "Name"|t('commerce'),
        instructions: "What this PDF will be called in the control panel."|t('commerce'),
        id: 'name',
        name: 'name',
        value: pdf.name,
        errors: pdf.getErrors('name'),
        autofocus: true,
        required: true,
        disabled: readOnly,
    }) }}

    {{ forms.textField({
        label: "Handle"|t('commerce'),
        instructions: "How youâ€™ll refer to this PDF in the templates."|t('commerce'),
        id: 'handle',
        class: 'code',
        name: 'handle',
        value: pdf.handle,
        errors: pdf.getErrors('handle'),
        required: true,
        disabled: readOnly,
    }) }}

    {{ forms.textField({
        first: true,
        label: "Description"|t('commerce'),
        id: 'description',
        name: 'description',
        value: pdf.description,
        errors: pdf.getErrors('description'),
        disabled: readOnly,
    }) }}

    {{ forms.autoSuggestField({
        label: 'PDF Template Path'|t('commerce'),
        instructions: 'The template that the PDF should be generated from.'|t('commerce'),
        id: 'templatePath',
        class: 'code',
        name: 'templatePath',
        value: pdf.templatePath,
        errors: pdf.getErrors('templatePath'),
        required: true,
        suggestions: craft.cp.getTemplateSuggestions(),
        disabled: readOnly,
    }) }}

    {{ forms.textField({
        label: "Order PDF Filename Format"|t('commerce'),
        instructions: "What the order PDF filename should look like (sans extension). You can include tags that output order properties, such as {ex1} or {ex2}."|t('commerce', {
            ex1: '<code>{number}</code>',
            ex2: '<code>{myOrderCustomField}</code>'
        }),
        id: 'fileNameFormat',
        name: 'fileNameFormat',
        value: pdf.fileNameFormat,
        class: 'code ltr',
        errors: pdf.getErrors('fileNameFormat'),
        disabled: readOnly,
    }) }}

    {{ forms.selectField({
        label: 'Language'|t('commerce'),
        instructions: "The language to be used when PDF is rendered."|t,
        id: 'language',
        name: 'language',
        options : pdfLanguageOptions,
        value : pdf.language,
        errors: pdf.getErrors('language') ?? null,
        hasOptgroups: true,
        disabled: readOnly,
    }) }}

    {{ forms.selectField({
        label: 'Paper Orientation'|t('commerce'),
        id: 'paperOrientation',
        name: 'paperOrientation',
        options: paperOrientationOptions,
        value: pdf.paperOrientation,
        errors: pdf.getErrors('paperOrientation') ?? null,
        disabled: readOnly,
    }) }}

    {{ forms.selectizeField({
        label: 'Paper Size'|t('commerce'),
        id: 'paperSize',
        name: 'paperSize',
        options: paperSizeOptions,
        value: pdf.paperSize,
        errors: pdf.getErrors('paperSize') ?? null,
        disabled: readOnly,
    }) }}

    {{ forms.lightswitchField({
        label: "Enabled?"|t('commerce'),
        instructions: 'If disabled, this PDF will not be available or sent with emails.'|t('commerce'),
        id: 'enabled',
        name: 'enabled',
        value: 1,
        on: pdf.enabled,
        errors: pdf.getErrors('enabled'),
        disabled: readOnly,
    }) }}

    {% if pdf.isDefault %}
        <input type="hidden" name="isDefault" value="1">
    {% else %}
    {{ forms.lightswitchField({
        label: "Default Order PDF"|t('commerce'),
        instructions: "This is the default PDF that will be rendered when requesting the order PDF."|t('commerce'),
        name: 'isDefault',
        value: 1,
        on: isDefault,
        errors: pdf.getErrors('isDefault'),
        disabled: readOnly,
    }) }}
    {% endif %}

{% js %}
    {% if not pdf.handle %}new Craft.HandleGenerator('#name', '#handle');{% endif %}
{% endjs %}

{% endblock %}
