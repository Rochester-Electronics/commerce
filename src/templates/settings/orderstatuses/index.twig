{% extends "commerce/_layouts/settings" %}

{% set selectedTab = 'settings' %}
{% do view.registerAssetBundle('craft\\web\\assets\\admintable\\AdminTableAsset') -%}
{% do view.registerTranslations('commerce', [
    'Couldn’t reorder statuses.',
    'Default Status?',
    'Handle',
    'Has Emails?',
    'Name',
    'Order statuses reordered.',
    'Yes',
]) %}

{% set crumbs = [
  { label: 'Commerce'|t('commerce'), url: url('commerce') },
] %}

{% block actionButton %}
    {% if not readOnly %}
    <div class="btngroup">
        <button type="button" class="btn submit add icon menubtn">{{ 'New order status'|t('commerce') }}</button>
        <div class="menu">
            <ul>
                {% for store in stores %}
                    <li>
                        <a href="{{ url("commerce/settings/orderstatuses/#{store.handle}/new") }}">{{ store.name }}</a>
                    </li>
                {% endfor %}
            </ul>
        </div>
    </div>
    {% endif %}
{% endblock %}

{% block content %}
        {% for store in stores %}
            {% if stores|length > 1 %}
                <h2 id="{{ store.handle }}" class="{% if loop.first %}first{% endif %}">{{ store.name }}</h2>
            {% endif %}
                <div id="statuses-vue-admin-table-{{ store.handle }}"></div>
            {% if not loop.last %}<hr>{% endif %}
        {% endfor %}
{% endblock %}

{% for handle, storeStatuses in orderStatuses %}
  {% set tableData = [] %}
  {% for orderStatus in storeStatuses %}
      {% set tableData = tableData|merge([{
          id: orderStatus.id,
          labelHtml: {
              url: orderStatus.cpEditUrl,
              html: orderStatus.labelHtml|raw
          },
          title: orderStatus.name|t('site'),
          url: orderStatus.cpEditUrl,
          handle: orderStatus.handle|e,
          hasEmails: orderStatus.emails|length ?:'',
          default: orderStatus.default ? true : false,
          _showDelete: orderStatus.canDelete(),
      }]) %}
  {% endfor %}

  {% js %}
      var columns = [
          {
              name: 'labelHtml',
              title: Craft.t('commerce', 'Name'),
              callback: function(value) {
                  return '<a class="cell-bold" href="'+value.url+'">'+value.html+'</a>';
              }
          },
          { name: '__slot:handle', title: Craft.t('commerce', 'Handle') },
          { name: 'hasEmails', title: Craft.t('commerce', 'Has Emails?') },
          {
              name: 'default',
              title: Craft.t('commerce', 'Default Status?'),
              callback: function(value) {
                  if (value) {
                      return '<span data-icon="check" title="'+Craft.escapeHtml(Craft.t('commerce', 'Yes'))+'"></span>';
                  }
              }
          }
      ];

      let {{ handle }}Config = {
        columns: columns,
        fullPane: false,
        container: '#statuses-vue-admin-table-{{ handle }}',
        minItems: 1,
        tableData: {{ tableData|json_encode|raw }},
      };

      {% if not readOnly %}
        {{ handle }}Config['deleteAction'] = 'commerce/order-statuses/delete';
        {{ handle }}Config['reorderAction'] = 'commerce/order-statuses/reorder';
        {{ handle }}Config['reorderSuccessMessage'] = Craft.t('commerce', 'Order statuses reordered.');
        {{ handle }}Config['reorderFailMessage'] = Craft.t('commerce', 'Couldn’t reorder statuses.');
      {% endif %}

      new Craft.VueAdminTable({{ handle }}Config);
  {% endjs %}
{% endfor %}

{% css %}
table.data thead .vuetable-th-labelHtml,
table.data thead .vuetable-th-slot-handle {
    width: 30%;
}
{% endcss %}