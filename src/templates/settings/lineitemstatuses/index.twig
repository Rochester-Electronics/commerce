{% extends "commerce/_layouts/settings" %}

{% set selectedTab = 'settings' %}
{% do view.registerAssetBundle('craft\\web\\assets\\admintable\\AdminTableAsset') -%}
{% do view.registerTranslations('commerce', [
    'Are you sure you want to delete “{name}”, this will set all line items with this status to no status?',
    'Couldn’t reorder statuses.',
    'Default status?',
    'Handle',
    'Line item statuses reordered.',
    'Name',
    'Yes',
]) %}

{% if not readOnly is defined %}
    {% exit 422 %}
{% endif %}

{% if readOnly %}
    {% set contentNotice = readOnlyNotice() %}
{% endif %}

{% block actionButton %}
    {% if not readOnly %}
    <div class="btngroup">
        <button type="button" class="btn submit add icon menubtn">{{ 'New line item status'|t('commerce') }}</button>
        <div class="menu">
            <ul>
                {% for store in stores %}
                    <li>
                        <a href="{{ url("commerce/settings/lineitemstatuses/#{store.handle}/new") }}">{{ store.name }}</a>
                    </li>
                {% endfor %}
            </ul>
        </div>
    </div>
    {% endif %}
{% endblock %}

{% block content %}
    {% for store in stores %}
        {% if stores|length > 1 %}
            <h2 id="{{ store.handle }}" class="{% if loop.first %}first{% endif %}">{{ store.name }}</h2>
        {% endif %}
            <div id="statuses-vue-admin-table-{{ store.handle }}"></div>
        {% if not loop.last %}<hr>{% endif %}
    {% endfor %}
{% endblock %}

{%  for handle, storeStatuses in lineItemStatuses %}
    {% set tableData = [] %}
    {% for lineItemStatus in storeStatuses %}
        {% set tableData = tableData|merge([{
            id: lineItemStatus.id,
            labelHtml: {
                url: lineItemStatus.cpEditUrl,
                html: lineItemStatus.labelHtml|raw
            },
            title: lineItemStatus.name|t('site'),
            url: lineItemStatus.cpEditUrl,
            handle: lineItemStatus.handle|e,
            default: lineItemStatus.default ? true : false,
        }]) %}
    {% endfor %}

    {% js %}
    var columns = [
        {
            name: 'labelHtml',
            title: Craft.t('commerce', 'Name'),
            callback: function(value) {
                return '<a class="cell-bold" href="'+value.url+'">'+value.html+'</a>';
            }
        },
        { name: '__slot:handle', title: Craft.t('commerce', 'Handle') },
        {
            name: 'default',
            title: Craft.t('commerce', 'Default Status?'),
            callback: function(value) {
                if (value) {
                    return '<span data-icon="check" title="'+Craft.escapeHtml(Craft.t('commerce', 'Yes'))+'"></span>';
                }
            }
        }
    ];

    let {{ handle }}Config = {
        columns: columns,
        container: '#statuses-vue-admin-table-{{ handle }}',
        padded: false,
        fullPane: false,
        tableData: {{ tableData|json_encode|raw }},
    };

    {% if not readOnly %}
    {{ handle }}Config['deleteAction'] = 'commerce/line-item-statuses/archive';
    {{ handle }}Config['deleteConfirmationMessage'] = Craft.t('commerce', 'Are you sure you want to delete “{name}”, this will set all line items with this status to no status?');
    {{ handle }}Config['reorderAction'] = 'commerce/line-item-statuses/reorder';
    {{ handle }}Config['reorderSuccessMessage'] = Craft.t('commerce', 'Line item statuses reordered.');
    {{ handle }}Config['reorderFailMessage'] = Craft.t('commerce', 'Couldn’t reorder statuses.');
    {% endif %}

    new Craft.VueAdminTable({{ handle }}Config);
    {% endjs %}
{% endfor %}
